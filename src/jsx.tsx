import React from 'react'
import { BuilderFactory } from "./builder";

export function bindBuilderFactoryToJsx(builderFactory: BuilderFactory) {
  return {
    a: builderFactory<JSX.IntrinsicElements['a']>(props => <a {...props} />),
    abbr: builderFactory<JSX.IntrinsicElements['abbr']>(props => <abbr {...props} />),
    address: builderFactory<JSX.IntrinsicElements['address']>(props => <address {...props} />),
    area: builderFactory<JSX.IntrinsicElements['area']>(props => <area {...props} />),
    article: builderFactory<JSX.IntrinsicElements['article']>(props => <article {...props} />),
    aside: builderFactory<JSX.IntrinsicElements['aside']>(props => <aside {...props} />),
    audio: builderFactory<JSX.IntrinsicElements['audio']>(props => <audio {...props} />),
    b: builderFactory<JSX.IntrinsicElements['b']>(props => <b {...props} />),
    base: builderFactory<JSX.IntrinsicElements['base']>(props => <base {...props} />),
    bdi: builderFactory<JSX.IntrinsicElements['bdi']>(props => <bdi {...props} />),
    bdo: builderFactory<JSX.IntrinsicElements['bdo']>(props => <bdo {...props} />),
    big: builderFactory<JSX.IntrinsicElements['big']>(props => <big {...props} />),
    blockquote: builderFactory<JSX.IntrinsicElements['blockquote']>(props => <blockquote {...props} />),
    body: builderFactory<JSX.IntrinsicElements['body']>(props => <body {...props} />),
    br: builderFactory<JSX.IntrinsicElements['br']>(props => <br {...props} />),
    button: builderFactory<JSX.IntrinsicElements['button']>(props => <button {...props} />),
    canvas: builderFactory<JSX.IntrinsicElements['canvas']>(props => <canvas {...props} />),
    caption: builderFactory<JSX.IntrinsicElements['caption']>(props => <caption {...props} />),
    cite: builderFactory<JSX.IntrinsicElements['cite']>(props => <cite {...props} />),
    code: builderFactory<JSX.IntrinsicElements['code']>(props => <code {...props} />),
    col: builderFactory<JSX.IntrinsicElements['col']>(props => <col {...props} />),
    colgroup: builderFactory<JSX.IntrinsicElements['colgroup']>(props => <colgroup {...props} />),
    data: builderFactory<JSX.IntrinsicElements['data']>(props => <data {...props} />),
    datalist: builderFactory<JSX.IntrinsicElements['datalist']>(props => <datalist {...props} />),
    dd: builderFactory<JSX.IntrinsicElements['dd']>(props => <dd {...props} />),
    del: builderFactory<JSX.IntrinsicElements['del']>(props => <del {...props} />),
    details: builderFactory<JSX.IntrinsicElements['details']>(props => <details {...props} />),
    dfn: builderFactory<JSX.IntrinsicElements['dfn']>(props => <dfn {...props} />),
    dialog: builderFactory<JSX.IntrinsicElements['dialog']>(props => <dialog {...props} />),
    div: builderFactory<JSX.IntrinsicElements['div']>(props => <div {...props} />),
    dl: builderFactory<JSX.IntrinsicElements['dl']>(props => <dl {...props} />),
    dt: builderFactory<JSX.IntrinsicElements['dt']>(props => <dt {...props} />),
    em: builderFactory<JSX.IntrinsicElements['em']>(props => <em {...props} />),
    embed: builderFactory<JSX.IntrinsicElements['embed']>(props => <embed {...props} />),
    fieldset: builderFactory<JSX.IntrinsicElements['fieldset']>(props => <fieldset {...props} />),
    figcaption: builderFactory<JSX.IntrinsicElements['figcaption']>(props => <figcaption {...props} />),
    figure: builderFactory<JSX.IntrinsicElements['figure']>(props => <figure {...props} />),
    footer: builderFactory<JSX.IntrinsicElements['footer']>(props => <footer {...props} />),
    form: builderFactory<JSX.IntrinsicElements['form']>(props => <form {...props} />),
    h1: builderFactory<JSX.IntrinsicElements['h1']>(props => <h1 {...props} />),
    h2: builderFactory<JSX.IntrinsicElements['h2']>(props => <h2 {...props} />),
    h3: builderFactory<JSX.IntrinsicElements['h3']>(props => <h3 {...props} />),
    h4: builderFactory<JSX.IntrinsicElements['h4']>(props => <h4 {...props} />),
    h5: builderFactory<JSX.IntrinsicElements['h5']>(props => <h5 {...props} />),
    h6: builderFactory<JSX.IntrinsicElements['h6']>(props => <h6 {...props} />),
    head: builderFactory<JSX.IntrinsicElements['head']>(props => <head {...props} />),
    header: builderFactory<JSX.IntrinsicElements['header']>(props => <header {...props} />),
    hgroup: builderFactory<JSX.IntrinsicElements['hgroup']>(props => <hgroup {...props} />),
    hr: builderFactory<JSX.IntrinsicElements['hr']>(props => <hr {...props} />),
    html: builderFactory<JSX.IntrinsicElements['html']>(props => <html {...props} />),
    i: builderFactory<JSX.IntrinsicElements['i']>(props => <i {...props} />),
    iframe: builderFactory<JSX.IntrinsicElements['iframe']>(props => <iframe {...props} />),
    img: builderFactory<JSX.IntrinsicElements['img']>(props => <img {...props} />),
    input: builderFactory<JSX.IntrinsicElements['input']>(props => <input {...props} />),
    ins: builderFactory<JSX.IntrinsicElements['ins']>(props => <ins {...props} />),
    kbd: builderFactory<JSX.IntrinsicElements['kbd']>(props => <kbd {...props} />),
    keygen: builderFactory<JSX.IntrinsicElements['keygen']>(props => <keygen {...props} />),
    label: builderFactory<JSX.IntrinsicElements['label']>(props => <label {...props} />),
    legend: builderFactory<JSX.IntrinsicElements['legend']>(props => <legend {...props} />),
    li: builderFactory<JSX.IntrinsicElements['li']>(props => <li {...props} />),
    link: builderFactory<JSX.IntrinsicElements['link']>(props => <link {...props} />),
    main: builderFactory<JSX.IntrinsicElements['main']>(props => <main {...props} />),
    map: builderFactory<JSX.IntrinsicElements['map']>(props => <map {...props} />),
    mark: builderFactory<JSX.IntrinsicElements['mark']>(props => <mark {...props} />),
    menu: builderFactory<JSX.IntrinsicElements['menu']>(props => <menu {...props} />),
    menuitem: builderFactory<JSX.IntrinsicElements['menuitem']>(props => <menuitem {...props} />),
    meta: builderFactory<JSX.IntrinsicElements['meta']>(props => <meta {...props} />),
    meter: builderFactory<JSX.IntrinsicElements['meter']>(props => <meter {...props} />),
    nav: builderFactory<JSX.IntrinsicElements['nav']>(props => <nav {...props} />),
    noindex: builderFactory<JSX.IntrinsicElements['noindex']>(props => <noindex {...props} />),
    noscript: builderFactory<JSX.IntrinsicElements['noscript']>(props => <noscript {...props} />),
    object: builderFactory<JSX.IntrinsicElements['object']>(props => <object {...props} />),
    ol: builderFactory<JSX.IntrinsicElements['ol']>(props => <ol {...props} />),
    optgroup: builderFactory<JSX.IntrinsicElements['optgroup']>(props => <optgroup {...props} />),
    option: builderFactory<JSX.IntrinsicElements['option']>(props => <option {...props} />),
    output: builderFactory<JSX.IntrinsicElements['output']>(props => <output {...props} />),
    p: builderFactory<JSX.IntrinsicElements['p']>(props => <p {...props} />),
    param: builderFactory<JSX.IntrinsicElements['param']>(props => <param {...props} />),
    picture: builderFactory<JSX.IntrinsicElements['picture']>(props => <picture {...props} />),
    pre: builderFactory<JSX.IntrinsicElements['pre']>(props => <pre {...props} />),
    progress: builderFactory<JSX.IntrinsicElements['progress']>(props => <progress {...props} />),
    q: builderFactory<JSX.IntrinsicElements['q']>(props => <q {...props} />),
    rp: builderFactory<JSX.IntrinsicElements['rp']>(props => <rp {...props} />),
    rt: builderFactory<JSX.IntrinsicElements['rt']>(props => <rt {...props} />),
    ruby: builderFactory<JSX.IntrinsicElements['ruby']>(props => <ruby {...props} />),
    s: builderFactory<JSX.IntrinsicElements['s']>(props => <s {...props} />),
    samp: builderFactory<JSX.IntrinsicElements['samp']>(props => <samp {...props} />),
    script: builderFactory<JSX.IntrinsicElements['script']>(props => <script {...props} />),
    section: builderFactory<JSX.IntrinsicElements['section']>(props => <section {...props} />),
    select: builderFactory<JSX.IntrinsicElements['select']>(props => <select {...props} />),
    small: builderFactory<JSX.IntrinsicElements['small']>(props => <small {...props} />),
    source: builderFactory<JSX.IntrinsicElements['source']>(props => <source {...props} />),
    span: builderFactory<JSX.IntrinsicElements['span']>(props => <span {...props} />),
    strong: builderFactory<JSX.IntrinsicElements['strong']>(props => <strong {...props} />),
    style: builderFactory<JSX.IntrinsicElements['style']>(props => <style {...props} />),
    sub: builderFactory<JSX.IntrinsicElements['sub']>(props => <sub {...props} />),
    summary: builderFactory<JSX.IntrinsicElements['summary']>(props => <summary {...props} />),
    sup: builderFactory<JSX.IntrinsicElements['sup']>(props => <sup {...props} />),
    table: builderFactory<JSX.IntrinsicElements['table']>(props => <table {...props} />),
    tbody: builderFactory<JSX.IntrinsicElements['tbody']>(props => <tbody {...props} />),
    td: builderFactory<JSX.IntrinsicElements['td']>(props => <td {...props} />),
    textarea: builderFactory<JSX.IntrinsicElements['textarea']>(props => <textarea {...props} />),
    tfoot: builderFactory<JSX.IntrinsicElements['tfoot']>(props => <tfoot {...props} />),
    th: builderFactory<JSX.IntrinsicElements['th']>(props => <th {...props} />),
    thead: builderFactory<JSX.IntrinsicElements['thead']>(props => <thead {...props} />),
    time: builderFactory<JSX.IntrinsicElements['time']>(props => <time {...props} />),
    title: builderFactory<JSX.IntrinsicElements['title']>(props => <title {...props} />),
    tr: builderFactory<JSX.IntrinsicElements['tr']>(props => <tr {...props} />),
    track: builderFactory<JSX.IntrinsicElements['track']>(props => <track {...props} />),
    u: builderFactory<JSX.IntrinsicElements['u']>(props => <u {...props} />),
    ul: builderFactory<JSX.IntrinsicElements['ul']>(props => <ul {...props} />),
    var: builderFactory<JSX.IntrinsicElements['var']>(props => <var {...props} />),
    video: builderFactory<JSX.IntrinsicElements['video']>(props => <video {...props} />),
    wbr: builderFactory<JSX.IntrinsicElements['wbr']>(props => <wbr {...props} />),
    webview: builderFactory<JSX.IntrinsicElements['webview']>(props => <webview {...props} />),
  }
}
